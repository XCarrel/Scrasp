@model Scrasp.Models.Story

@{
  ViewBag.Title = "Story edit";
}

@using (Html.BeginForm()) {
  @Html.AntiForgeryToken()
  @Html.ValidationSummary(true, "", new {@class = "text-danger"})
  @Html.HiddenFor(model => model.id)
  @Html.HiddenFor(model => model.Projects_id)

  <div class="row">
    <h2>
      Story @Html.EditorFor(model => model.shortName)
    </h2>
    @Html.ValidationMessageFor(model => model.shortName, "", new {@class = "text-danger"})
    <p>
      As a @Html.EditorFor(model => model.actor)
      @Html.ValidationMessageFor(model => model.actor, "", new {@class = "text-danger"})
    </p>
    <p>
      I want to @Html.EditorFor(model => model.storyDescription)
      @Html.ValidationMessageFor(model => model.storyDescription, "", new {@class = "text-danger"})
    </p>
    <p>
      Il s'agit d'une @Html.DropDownList("StoryTypes_id") story, valant @Html.EditorFor(model => model.points) points, qui est @Html.DropDownList("StoryStates_id")
      @Html.ValidationMessageFor(model => model.StoryTypes_id, "", new {@class = "text-danger"})
      @Html.ValidationMessageFor(model => model.points, "", new {@class = "text-danger"})
      @Html.ValidationMessageFor(model => model.StoryStates_id, "", new {@class = "text-danger"})
    </p>
    <p>Sprint: @Html.DropDownList("Sprints_id")</p>
  </div>
  <div class="row">
    <div class="col-md-6">
      <h4>Tâches associées</h4>
      <table class="table table-striped">
        <thead>
        <tr>
          <th>Remove</th>
          <th>@Html.DisplayNameFor(model => model.Jobs.First().jobDescription)</th>
          <th>Personne</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var job in Model.Jobs) {
          <tr>
            <td>
              <input name="remove" type="checkbox" value="@job.id"/>
            </td>
            <td>@job.jobDescription</td>
            @if (job.ScraspUser == null) {
              <td>Aucun</td>
            } else {
              <td>@job.ScraspUser.username</td>
            }
          </tr>
        }
        <tr></tr>
        </tbody>
      </table>
    </div>
    <div class="col-md-6">
      <h4>Tâches non attribuées</h4>
      <table class="table table-striped">
        <thead>
        <tr>
          <th>Add</th>
          <th>@Html.DisplayNameFor(model => model.Jobs.First().jobDescription)</th>
          <th>Personne</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var job in ViewBag.Unassigned_Jobs) {
          <tr>
            <td>
              <input name="add" type="checkbox" value="@job.id"/>
            </td>
            <td>@job.jobDescription</td>
            @if (job.ScraspUser == null) {
              <td>Aucun</td>
            } else {
              <td>@job.ScraspUser.username</td>
            }
          </tr>
        }
        <tr></tr>
        </tbody>
      </table>
    </div>
  </div>
  <div class="row">
    <p>
      <input type="submit" value="Enregistrer" class="btn btn-success"/> |
      @Html.ActionLink("Back to List", "Index", null, new {@class = "btn btn-primary"})
    </p>
  </div>
}

@section Scripts {
  @Scripts.Render("~/bundles/jqueryval")
}

